function complicated_matrix_forming(source_video, roifn, wmeans, sigfn)
% сделать сложные матрицы по следующему тз:
% в каждой клетке матрицы будет число пикселей для следа клетки
    ncells = size(roifn, 2);
    roifn_1 = reshape(roifn, [512, 512, 490]);
    a = size(source_video, 1) * size(source_video, 2);
    b = size(source_video, 3);
    source_video_reshaped = reshape(source_video, [a, b]);
    foldername = "intensity_matrix_v4";
    mkdir(foldername);
    for ncell=1:ncells
        pixels = find(roifn_1(:, :, ncell));
        pixels_intensity = source_video_reshaped(pixels, :);
        max_intensity = max(pixels_intensity, [], "all");
        min_intensity = min(pixels_intensity, [], "all");
        bin_size = (max_intensity - min_intensity)/100;
        bin_period = min_intensity:bin_size:max_intensity;
        %bin_period_2 = 10:3:100-3;
        [counts, centers] = hist(double(pixels_intensity), 500);%bin_period_2);
        figname = sprintf("cell_%d_intensity_matrix", ncell);
        path_to_save = fullfile(foldername, figname);
        %figname = sprintf("intensity_matrix_v4\\cell_%d_intensity_matrix", ncell);
        %figname_2 = sprintf("intensity_matrix_v4\\cell_%d_intensity_matrix.mat", ncell);
        map = jet;
        %imwrite(counts, map, figname);
        f = figure(1);
        imagesc(counts(:, 1:300));
        ax = gca;
        ax.YDir = 'normal';
        colormap(gca, 'jet');
        f.Units = 'inches';
        f.OuterPosition = [0.25 0.25 16 6];
        print(gcf, path_to_save, '-dpng');
        clf
        save(path_to_save,"counts", "bin_period", "centers", '-mat');
        ks_array = zeros(length(centers), size(pixels_intensity, 2));
        ks_array_normalised = zeros(length(centers), size(pixels_intensity, 2));
        for i=1:size(pixels_intensity, 2)
            x = ksdensity(double(pixels_intensity(:, i)), centers);%double(bin_period));
            ks_array(:, i) = x;    
        end
        ks_array_max = max(ks_array, [], 'all');
        ks_array_max_col = max(ks_array, [], 1);
        ks_array_normalised = ks_array ./ ks_array_max_col;
        figname = sprintf("cell_%d_ks_array", ncell);
        path_to_save = fullfile(foldername, figname);
        %figname = sprintf("intensity_matrix_v4\\cell_%d_ks_array", ncell);
        %figname_2 = sprintf("intensity_matrix_v4\\cell_%d_ks_array.mat", ncell);
        %imwrite(ks_array_normalised, map, figname);
%         f = figure(1);
%         imagesc(ks_array_normalised(:, 1:300));
%         ax = gca;
%         ax.YDir = 'normal';
%         colormap(gca, 'jet');
%         f.Units = 'inches';
%         f.OuterPosition = [0.25 0.25 16 6];
%         print(gcf, figname, '-dpng');
%         clf;
%         save(figname_2,"ks_array", 'ks_array_normalised');
        f = figure(6);
        tiledlayout(2,1)
        nexttile
        imagesc(ks_array_normalised(:, 1:300));
        ax = gca;
        ax.YDir = 'normal';
        colormap(gca, 'jet');
        f.Units = 'inches';
        f.OuterPosition = [0.25 0.25 16 10];
        nexttile
        yyaxis left
        plot(wmeans{1, ncell}, DisplayName = "wmean");
        x = 1:600; %size(sigfn, 2);
        xq = 0.5:0.5:600;
        interpolated_signal = interp1(x, sigfn(ncell, :), xq);
        hold on
        yyaxis right
        plot(1:1200, interpolated_signal, DisplayName = "source video");
        xlim([0, 300]);
        legend();
        hold off;
        print(gcf, path_to_save, '-r300', '-dpng');
        clf;
        save(path_to_save,"ks_array", 'ks_array_normalised', '-mat');
    end


end

